name: Build and deploy ASP.Net Core app to Azure Web App - Sample-net8

on:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: Sample-net8
  AZURE_RESOURCE_GROUP: Sample-net8_group
  AZURE_SLOT_NAME: Production    # change if you use a non-Production slot

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      - name: Build with dotnet
        run: dotnet build --configuration Release

      - name: Publish with dotnet
        run: dotnet publish -c Release -o ${{ env.DOTNET_ROOT }}/myapp

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: .net-app
          path: ${{ env.DOTNET_ROOT }}/myapp

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: .net-app

      - name: Login to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Stop Azure Web App before deployment
        run: |
          az webapp stop \
            --name ${{ env.AZURE_WEBAPP_NAME }} \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }}

      # ðŸ”½ Replace sleep with SCM reachability check
      - name: Compute SCM hostname (handles slots)
        run: |
          APP="${{ env.AZURE_WEBAPP_NAME }}"
          SLOT="${{ env.AZURE_SLOT_NAME }}"
          if [ "$SLOT" = "Production" ] || [ -z "$SLOT" ]; then
            echo "SCM_HOSTNAME=${APP}.scm.azurewebsites.net" >> "$GITHUB_ENV"
          else
            echo "SCM_HOSTNAME=${APP}-${SLOT}.scm.azurewebsites.net" >> "$GITHUB_ENV"
          fi

      - name: Wait for Kudu/SCM to be reachable (max 5 min)
        run: |
          DEADLINE=$((SECONDS+300))   # 5 minutes
          INTERVAL=5
          echo "Polling https://${SCM_HOSTNAME} until reachable..."
          while (( SECONDS < DEADLINE )); do
            if curl -s -o /dev/null -w "%{http_code}" "https://${SCM_HOSTNAME}/" >/dev/null 2>&1; then
              echo "Kudu endpoint is reachable. Proceeding."
              exit 0
            fi
            echo "Kudu not reachable yet. Retrying in ${INTERVAL}s..."
            sleep $INTERVAL
          done
          echo "Timed out waiting for Kudu/SCM to be reachable after 5 minutes."
          exit 1

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          slot-name: ${{ env.AZURE_SLOT_NAME }}
          package: .

      - name: Start Azure Web App after deployment
        run: |
          az webapp start \
            --name ${{ env.AZURE_WEBAPP_NAME }} \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }}
